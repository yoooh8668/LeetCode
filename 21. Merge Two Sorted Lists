/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
    struct ListNode* temp;

    //check if any list that is NULL
    //l1 is NULL?
    temp =l1;
    int count =0;
    while (count==0 && l1)      
    {
        count++;
    }
    if(count==0)
        return l2;
    
    //l2 is NULL?
    count=0;
    temp =l2;
    while (count==0 && l2)
    {
        count++;
    }
    if(count==0)
        return l1;

    //determine the start list
    struct ListNode* start;
    if (l1->val < l2->val)
    {
        start=l1;
        l1=l1->next;
    }
    else
    {
        start=l2;
        l2=l2->next;
    }
    temp=start;
    
    //start sort til l1 or l2 are NULL
    while( l1 && l2)
    {
        if (l1->val < l2->val)
        {
            temp->next=l1;
            temp=l1;
            l1=l1->next;
        }
        else
        {
            temp->next=l2;
            temp=l2;
            l2=l2->next;
        }
    }
    
    //connect the remained
    if ( !l1 )
        temp->next=l2;
    else
        temp->next=l1;
    
    return start;
}

int myAtoi(char * s){
    int sLen = strlen(s);
    bool atLeastOneNonSpace = false;
    bool atLeastOneNumber = false;
    bool negative = false;
    double result = 0;
    
    //For ASCII, number are 0x30~0x39
    for(int i=0 ; i<sLen ; i++)
    {
        if(s[i]!=' ')
        {
            if(s[i]=='-' && !atLeastOneNumber)          //sign set to negative if no any number detected.
            {            
                if('0'>s[i+1] || '9'<s[i+1])            //return 0 if next character is not a number(- , -a ,-....)
                    return 0 ; 
                negative = true;
            }
            else if(s[i]=='+' && !atLeastOneNumber)     //sign set to positive if no any number detected.
            {
                if('0'>s[i+1] || '9'<s[i+1])            //return 0 if next character is not a number
                    return 0;               
            }
            else if('0'<=s[i] && '9'>=s[i])             //this is ASCII number
            {
                atLeastOneNumber = true;
                result = (result * 10) + (s[i]-'0');
            }
            else{                                       //if detect a non number, ,+,-
                break;
            }
            atLeastOneNonSpace = true;
        }
        else if(atLeastOneNonSpace)
        {   //stop loop if 2nd nonspace appear after ' '
            break;
        }
    }
    if(negative)
    {
        result*=(-1);
        if ( result <-2147483648 )
            return -2147483648;
        else
            return result;
    }
    else{
        if ( result > 2147483647 )
            return 2147483647;
        else
            return result;
    }
}

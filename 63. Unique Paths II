/****************************************
Using "62. Unique Paths" DP function.
****************************************/
int uniquePathsWithObstacles(int** obstacleGrid, int obstacleGridSize, int* obstacleGridColSize){
    int dp[obstacleGridSize][obstacleGridColSize[0]];
    dp[0][0]=!(obstacleGrid[0][0]);
    
    if (dp[0][0]==0)
        return 0;
    
    for (int i = 0; i < obstacleGridSize; i++)
        for (int j = 0; j < obstacleGridColSize[0]; j++){
            if ( i==0 && j==0 )
                continue;
            //if obstacle, dp[i][j]=0.
            if (obstacleGrid[i][j]==1)
                dp[i][j] = 0;
            else
            {
                if (i > 0 && j > 0)
                    dp[i][j] = dp[i-1][j] + dp[i][j-1];
                else if ( i==0 )
                    dp[i][j] = dp[i][j-1];
                else 
                    dp[i][j] = dp[i-1][j];
            }
        }
    return dp[obstacleGridSize - 1][obstacleGridColSize[0] - 1];
}

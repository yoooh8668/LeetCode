/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* reverseKGroup(struct ListNode* head, int k){
    struct ListNode *temp;
    struct ListNode *start;
    temp=head;
    start=head;
    int count=0;
    while (temp)
    {
        count++;
        temp = temp->next;
    }
    printf("count=%d\n",count);
    
    if (!count)
        return NULL;
    else if (count==1 || k==1)
        return head;
    
    temp=head;
    for (int i=1 ;i<=count-k+1 ;i+=k)
    {
        int saveValue[k];
        for (int j=0;j<k;j++)
        {
            saveValue[k-1-j] = temp->val;
            temp=temp->next;
        }
        for (int j=0;j<k;j++)
        {
            head->val=saveValue[j];
            head=head->next;
        }
    }
    return start;
}



/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** generateMatrix(int n, int* returnSize, int** returnColumnSizes){
    int** result=malloc(sizeof(int*)*n);
    int *retcolsizes = malloc(sizeof(int)*n);
    *returnColumnSizes = retcolsizes;
    for (int i=0 ; i<n ; i++)
    {
        result[i]=malloc(sizeof(int)*n);
        retcolsizes[i]=n;
        for (int j=0 ; j<n ; j++)
        {
            result[i][j]=401;
        }
    }
    
    int direction=0;
    int row=0;
    int col=0;
    for (int i=0; i < n*n ;i++)
    {
        if (direction==0)//right
        {
            if (col==n || result[row][col]!=401)
            {
                col--;
                row++;
                i--;
                direction++;
                continue;
            }
            result[row][col++]=i+1;
        }
        else if (direction==1)//down
        {
            if (row==n || result[row][col]!=401)
            {
                row--;
                col--;
                i--;
                direction++;
                continue;
            }
            result[row++][col]=i+1;
        }
        else if (direction==2)//left
        {
            if (col == -1 || result[row][col]!=401)
            {
                col++;
                row--;
                i--;
                direction++;
                continue;
            }
            result[row][col--]=i+1;
        }
        else                    //up
        {
            if (row ==-1 || result[row][col]!=401)
            {
                row++;
                col++;
                i--;
                direction=0;
                continue;
            }
           result[row--][col]=i+1;
        }
        
    }
    *returnSize=n;
    return result;
}

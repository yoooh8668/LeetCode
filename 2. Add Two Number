/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode * addNewNode(struct ListNode * front ,int value) { 
    struct ListNode * newListNode; 
    newListNode = (struct ListNode*) malloc(sizeof(struct ListNode)); 
    newListNode->val = value; 
    newListNode->next = NULL;
    if (front != NULL)        
        front->next = newListNode;
    return newListNode; 
} 

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    struct ListNode * resultNode = addNewNode(NULL,0);
    struct ListNode * resultNodeSave = resultNode;
    resultNode->val = (l1->val + l2->val)%10;
    int sum = 0;

    for (int i=0 ; i<100 ; i++)
    {
        //if two List and sum are all null ===> break
        if ((l1==NULL) && (l2==NULL) && (sum == 0))
        {
            break;
        }
        else//add function
        {
            if(l1!=NULL)
            {
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2!=NULL)
            {
                sum += l2->val;
                l2 = l2->next;
            }
            if (i != 0)
            {
                resultNode = addNewNode(resultNode,sum%10);
            }
        }  
        sum/=10;
    }
    return resultNodeSave; 
    free(resultNode);
    free(resultNodeSave);
}

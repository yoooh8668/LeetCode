/*******************************
1.Give a number max for store max of the result(sum).
  Keep adding element.
  Until the element that larger than result itself.
  Change result to that element.(Reset sum to only nums[i])
*******************************/
int maxSubArray(int* nums, int numsSize){
    int max=nums[0];
    int result=0;
    for (int i=0 ; i<numsSize ; i++) 
    {
        result += nums[i];
        if (nums[i] > result) 
            result = nums[i];
        
        if (result > max) 
            max = result;
    }
    return max;
}

/****************************
2.Change the element in nums.
  If (num[i]+nums[i-1]) larger than num[i], change nums[i] to that number.
  This number also can indicate 'the largest sum of above element'.
  So judge that if result is larger than nums[i], if no change to the number.
  EX: [ -2  ,  1  , -3  ,  4  , -1  ,  2  ,  1  , -5  ,  4]
             -1<1  -2>-3 -1<4  3>-1  5>2   6>1   1>-5  5>4  
   ==>[ -2  ,  1  , -2  ,  4  ,  3  ,  5  ,  6  ,  1  ,  5]
   largest nums[i] is 6
****************************/
int maxSubArray(int* nums, int numsSize){
    int result=nums[0];
    int temp;
    for(int i = 1; i < numsSize ; i++)
    {
        temp=nums[i-1]+nums[i];
        nums[i] = (nums[i] > temp) ? nums[i] : temp;
        result = (nums[i] > result) ? nums[i] : result;
    }
    return result;
}

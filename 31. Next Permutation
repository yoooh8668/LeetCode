/*
This is the combination issue.
For the nums combination, find the just bigger one than origin.
If the current one is the biggest, return the smallest one.
*/

void nextPermutation(int* nums, int numsSize){
    int temp;
    
    //If growing bigger from back ?
    for (int i =numsSize-1 ; i>0 ;i--)
    {
        if (nums[i-1]>=nums[i])
            continue;
        else
        {
            //find the number bigger then nums[i-1]
            for (int j=numsSize-1 ; ;j--)
            {
                if (nums[j]>nums[i-1])
                {
                    temp = nums[j];
                    nums[j] = nums[i-1];
                    nums[i-1] = temp;
                    for (int k=i ; k<(numsSize+i)/2 ;k++)
                    {
                        temp =nums[k];
                        nums[k] = nums[numsSize-1+i-k];
                        nums[numsSize-1+i-k] = temp;
                    }
                    return nums;
                }
            }
        }
    }
    
    //This one is the largest one. ==> All switch
    for (int i=0 ; i<numsSize/2 ;i++)
    {
        temp =nums[i];
        nums[i] = nums[numsSize-1-i];
        nums[numsSize-1-i] = temp;
    }
    return nums;
}
